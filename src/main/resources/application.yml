server:
  port: 8080
  servlet:
    context-path: /api
  # Enable HTTPS in production
  ssl:
    enabled: false # Set to true in production with proper certificate
    key-store: classpath:keystore.p12
    key-store-password: changeit
    key-store-type: PKCS12
    key-alias: tomcat

# Database Connection
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/legendaryuser?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: Nackonel1@
    driver-class-name: com.mysql.cj.jdbc.Driver

# JPA & Hibernate
jpa:
  properties:
    hibernate:
      dialect: org.hibernate.dialect.MySQLDialect
      format_sql: true
  hibernate:
    ddl-auto: update
  show-sql: true


  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:}
    password: ${EMAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        transport:
          protocol: smtp

  security:
    oauth2:
      client:
        registration:
        # Optional: Add OAuth2 providers later

# Custom application properties
app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey1235678qwertyuiopjhgfdsfghj94gfertyuio2345jds5kjhgfd457654fghfd} # ${}
    expiration-ms: 86400000 # 24 hours
  frontend:
    url: http://localhost:3000
  email:
    from: no-reply@yourapp.com
  security:
    max-login-attempts: 5
    lock-time-duration: 1800000 # 30 minutes in milliseconds
    otp:
      expiration-minutes: 10
      length: 6
    rate-limit:
      requests-per-hour: 5

# Logging configuration
logging:
  level:
    com.example.authapp: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
  file:
    name: logs/auth-app.log
